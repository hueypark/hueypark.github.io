<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marsettler</title>
    <link>https://marsettler.com/</link>
    <description>Recent content on Marsettler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2024 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://marsettler.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Newsfeed 2024</title>
      <link>https://marsettler.com/newsfeed/newsfeed-2024/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/newsfeed/newsfeed-2024/</guid>
      <description>April 2024 After three weeks of sobriety by KBS Secrets of the birth, old age, disease, death  The likelihood of alcohol dependence and depression co-existing is 30% to as much as 50%.
 Every team will have conflict - 4 stages of team development by Hyunsol Park  Forming, Storming, Norming, Performing
 Right guide for forming a team.
Tasks should be assigned in much greater detail for each role, goal, and process, with the goal of communicating frequently and gaining understanding through task performance.</description>
    </item>
    
    <item>
      <title>(Book) Androids: The Team That Built the Android Operating System</title>
      <link>https://marsettler.com/book/androids-the-team-that-built-the-android-operating-system/</link>
      <pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/androids-the-team-that-built-the-android-operating-system/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Publisher: Chet Haase&lt;/li&gt;
&lt;li&gt;ISBN-13: 978-1737354819&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Bloom filter</title>
      <link>https://marsettler.com/performance/bloom_filter/</link>
      <pubDate>Sat, 24 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/performance/bloom_filter/</guid>
      <description>Good reads  Modern Bloom Filters: 22x Faster!  </description>
    </item>
    
    <item>
      <title>Go 성능 최적화 팁</title>
      <link>https://marsettler.com/go/go-performance-optimization-tips/</link>
      <pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go-performance-optimization-tips/</guid>
      <description>&lt;h2 id=&#34;go---&#34;&gt;Go 성능 최적화 팁&lt;/h2&gt;
&lt;p&gt;박재완&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;airbridge--luft&#34;&gt;Airbridge 와 Luft&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.airbridge.io/&#34;&gt;Airbridge&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;합리적인 비용의 올인원 모바일 마케팅 솔루션&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.ab180.co/stories/introducing-luft&#34;&gt;Luft&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Airbridge 에서 유저행동 분석을 위해 사용하는 OLAP 데이터베이스&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.ab180.co/stories/traildb-to-ziegel&#34;&gt;Ziegel&lt;/a&gt; 을 스토리지 엔진으로 사용&lt;/li&gt;
&lt;li&gt;Go 로 작성&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>(Book) 개발자에게 물어보세요</title>
      <link>https://marsettler.com/book/ask-your-developer/</link>
      <pubDate>Sun, 28 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/ask-your-developer/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 제프 로슨&lt;/li&gt;
&lt;li&gt;ISBN-13: 978-89-6626-390-5&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Food recipes</title>
      <link>https://marsettler.com/food-recipes/</link>
      <pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/food-recipes/</guid>
      <description>Seaweed soup 재료    재료 양     미역 10g   소고기 양지 150g    양념    양념 양     참기름 1큰술   국간장 2큰술   마늘 0.5큰술   소금 조금    조리순서  미역을 물에 10분 정도 담가서 불린다. 키친타월로 소고기 피를 뺀다. 참기름을 두르고 소고기를 볶는다. 불린 미역 물기를 빼서 넣고 소고기와 함게 볶는다.</description>
    </item>
    
    <item>
      <title>(Book) Unusual Challenges(유난한 도전)</title>
      <link>https://marsettler.com/book/unusual-challenges/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/unusual-challenges/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 정경화&lt;/li&gt;
&lt;li&gt;ISBN: 979-11-91211-86-3 03320&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>Career</title>
      <link>https://marsettler.com/career/</link>
      <pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/career/</guid>
      <description>Reflections on Career Advancement: Understanding the Power of Relationships and Reputation  Anyone can become a Director by working hard enough. To become a Sr. Director, someone needs to push you. To become a VP, several people need to pull for you. Check job postings weekly and ensure you have at least one job interview a year. Almost no one applying for a certain position lacks the qualifications. People who can hardly go wrong even if chosen with eyes closed are the ones who get the interview opportunities.</description>
    </item>
    
    <item>
      <title>CEO</title>
      <link>https://marsettler.com/ceo/</link>
      <pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/ceo/</guid>
      <description>Founding CEO and Management CEO Founding CEO are the original CEO, that was involved in the creation and early development of the company and tend to have a strong vision for its future, while management CEO are brought in to manage the company after it has been established and help it scale.
 https://www.youtube.com/watch?v=_bFTmjYVgzE&amp;amp;t=934s https://www.youtube.com/watch?v=l5gy7ITrqH8&amp;amp;t=1655s  </description>
    </item>
    
    <item>
      <title>Helm Charts</title>
      <link>https://marsettler.com/infra/helm_charts/</link>
      <pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/infra/helm_charts/</guid>
      <description>This page based on Charts for personal notes. If you want to learn more, please visit the official website.
 Charts Helm uses a packaging format called charts. A chart is a collection of files that describe a related set of Kubernetes resources. A single chart might be used to deploy something simple, like a memcached pod, or something complex, like a full web app stack with HTTP servers, databases, caches, and so on.</description>
    </item>
    
    <item>
      <title>Using Helm</title>
      <link>https://marsettler.com/infra/using_helm/</link>
      <pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/infra/using_helm/</guid>
      <description>This page based on Using Helm for personal notes. If you want to learn more, please visit the official website.
 Theree Big Concepts A Chart is a Helm package. It contains all of the resource definitions necessary to run an application, tool, or service inside of a Kubernetes cluster. Think of it like the Kubernetes equivalent of a Homebrew formula, an Apt dpkg, or a Yum RPM file.
A Repository is the place where charts can be collected and shared.</description>
    </item>
    
    <item>
      <title>Helm: The package manager for Kubernetes</title>
      <link>https://marsettler.com/infra/helm/</link>
      <pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/infra/helm/</guid>
      <description>What is Helm? Helm helps you manage Kubernetes applications — Helm Charts help you define, install, and upgrade even the most complex Kubernetes application.
Charts are easy to create, version, share, and publish — so start using Helm and stop the copy-and-paste.
The Purpose of Helm Helm is a tool for managing Kubernetes packages called charts. Helm can do the following:
 Create new charts from scratch Package charts into chart archive (tgz) files Interact with chart repositories where charts are stored Install and uninstall charts into an existing Kubernetes cluster Manage the release cycle of charts that have been installed with Helm  For Helm, there are three important concepts:</description>
    </item>
    
    <item>
      <title>Newsfeed 2023</title>
      <link>https://marsettler.com/newsfeed/newsfeed-2023/</link>
      <pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/newsfeed/newsfeed-2023/</guid>
      <description>December 2023 The Big Cloud Exit FAQ by @dhh  This isn’t some archaic knowledge that’s been lost to the ages. We might not know exactly how the pyramids were built, but we do still know how to connect a Linux machine to the internet.
 I think many of us are forgetting this.
 &amp;ldquo;buy the baseline, rent the spike&amp;rdquo;
 100% agree.
Constant Propagation in Compiler Design  In simpler words, we can say that if some value is assigned a known constant, than we can simply replace the that value by constant.</description>
    </item>
    
    <item>
      <title>Feedback</title>
      <link>https://marsettler.com/feedback/</link>
      <pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/feedback/</guid>
      <description>If you provide feedback, it is important to also include suggestions for improvement </description>
    </item>
    
    <item>
      <title>C&#43;&#43; to Go</title>
      <link>https://marsettler.com/go/c&#43;&#43;-to-go/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/c&#43;&#43;-to-go/</guid>
      <description>C++ to Go Introducing Ziegel 박재완
 Luft  Ziegel and TrailDB   Luft  OLAP database for analize the analyzing user behavior in real-time Use TrailDB as a storage Written in C/C++ and Go   TrailDB  TrailDB is an efficient tool for storing and querying series of events Written in C   Ziegel  New storage engine for the Luft Written in Go   Why?</description>
    </item>
    
    <item>
      <title>어떻게 코호트 분석을 하나요?</title>
      <link>https://marsettler.com/analytics/how-to-do-cohort-analysis/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/analytics/how-to-do-cohort-analysis/</guid>
      <description>코호트 분석 원하는 유저군(코호트)을 잡아서 해당 유저들의 행동을 분석하는 기법
예: &amp;ldquo;지난 6개월간 우리 앱에서 한달에 10만원 이상 소비한 30대 여성&amp;quot;이란 유저군을 잡은 후, 해당 유저군의 리텐션 (재방문률)을 분석
분석방법  Amplitude, Google Analytics 등의 외부 솔루션 사용  장점: 개발 비용이 없음 단점:  솔루션 비용 발생 솔루션에 의존하게 됨     RDB(OLTP) 사용  장점: 익숙함 단점: 일정 규모를 넘어가면 성능문제로 문제해결 불가능함   데이터 파이프라인을 구축(Snowflake, Apache Kafka 등 활용)  장점: 익숙함 단점: 생각보다 많은 비용   코호트 분석용 OALP 데이터베이스를 직접 개발: https://engineering.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; good reads</title>
      <link>https://marsettler.com/c&#43;&#43;/good-reads/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/c&#43;&#43;/good-reads/</guid>
      <description>C++ STL performance example with shared_ptr  I just have to say this and move on&amp;hellip; If you think it&#39;s okay to just use the STL for a project that doesn&#39;t need this level of optimization or performance, think again.
  It is highly likely that your project is not suitable for writing Non GC Native language, so it is recommended to replace it with a VM-based language. I don&#39;t use C++ anymore for 99% of my projects.</description>
    </item>
    
    <item>
      <title>Go good reads</title>
      <link>https://marsettler.com/go/go-good-reads/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go-good-reads/</guid>
      <description>Index  Performance Generics Others  Performance Go 1.22 inlining overhaul pprof documentation A Deep Look Into Golang Profile-Guided Optimization (PGO) Profiling and Execution Tracing in Go  What I learned  pprof can diff with go tool pprof -http=:8080 -diff_base &amp;lt;file2&amp;gt; &amp;lt;file1&amp;gt;    How to Write Accurate Benchmarks in Go  Not resetting or pausing the timer Making wrong assumptions about micro-benchmarks Not being careful about compiler optimizations Being fooled by the observer effect  Obscure Go Optimisations - Bryan Boreham  Take-aways  Slice-to-interface cast will allocate.</description>
    </item>
    
    <item>
      <title>gRPC</title>
      <link>https://marsettler.com/distributed-system/grpc/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/distributed-system/grpc/</guid>
      <description>gRPC 101 간단하고 빠르게 게임서버 만들기
 gRPC A high performance,
open source
universal
RPC framework
 RPC(Remote procedure call) 원격 프로시저 호출
 왜 gRPC 인가?  Simple service definition Start quickly and scale Works across languages and platforms Bi-directional streaming and integrated auth   Simple service definition 강력한 바이너리 직렬화 툴셋인,
Protocol Buffers 를 활용해 서비스를 정의함
 Start quickly and scale 적은 코드로 쉽게 개발을 시작한 후,</description>
    </item>
    
    <item>
      <title>Newsfeed 2022</title>
      <link>https://marsettler.com/newsfeed/newsfeed-2022/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/newsfeed/newsfeed-2022/</guid>
      <description>December 2022 Guido van Rossum: Python and the Future of Programming | Lex Fridman Podcast #341  GitHub Copilot   Are programmers jobs threatend by the existence of stack overflow? I don&#39;t think so.
 Agreed.
If it is truly important to you, you’ll find a way; if it is not, you’ll find an excuse. - anonymous 2022년 10월 중대한 결정을 지혜롭계 하는 법 일단 마음 내키는대로 결정하고, 그 뒤에 벌어질 일들을 담대하게 마주하라</description>
    </item>
    
    <item>
      <title>(Book) 실용주의 프로그래머 20주년 기념판</title>
      <link>https://marsettler.com/book/the-pragmatic-programmer-20th-anniversary-edition/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/the-pragmatic-programmer-20th-anniversary-edition/</guid>
      <description>지은이: 데이비드 토머스, 앤드류 헌트 ISBN: 978-89-6626-336-3    프로그래밍은 미래를 덜 고통스럽게 만들려 노력하는 것이다. 팀 동료들을 수월하게 해 주는 것이다. 문제를 일으켰다가 다시 되돌릴 수 있는 것이다. 좋은 습관을 기르고, 여러분의 도구를 이해하는 것이다.
&amp;ndash; x쪽
  &amp;lsquo;깨진 창문&#39;을 고치지 않은 채로 내버려 두지 말라. 나쁜 설계, 잘못된 결정, 혹은 형편없는 코드 등이 모두 깨진 창문이다. 발견하자마자 바로 고쳐라. 적절히 고칠 시간이 없다면 일단 판자로 덮는 것만이라도 하라.</description>
    </item>
    
    <item>
      <title>컴파일 시점에 printf 오류 검사</title>
      <link>https://marsettler.com/unreal-engine/compile_time_log_validate/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/unreal-engine/compile_time_log_validate/</guid>
      <description>언리얼 엔진의 UE_LOG 매크로는 컴파일 시점에 입력값의 오류를 검사하지 않습니다.
따라서 실행 중 로그를 기록하려다 의도하지 않은 동작(크래시 등)을 발생시킬 위험이 있습니다.
예)
FString temp; UE_LOG(LogClass, Log, TEXT(&amp;#34;%d, %s&amp;#34;), *temp); _stprintf_s</description>
    </item>
    
    <item>
      <title>언리얼 엔진 4 커스텀 네비게이션 시스템</title>
      <link>https://marsettler.com/unreal-engine/custom-navigation-system/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/unreal-engine/custom-navigation-system/</guid>
      <description>언리얼 엔진 4 커스텀 네비게이션 시스템 박재완
jaewan.huey.park@gmail.com
 목차  네비게이션 시스템 개요 왜 커스텀이 필요한가? 커스텀 네비게이션 데이터 구현 맛보기 참고자료 Q &amp;amp; A   네비게이션 시스템 인공지능 에이전트가 경로 찾기를 사용하여
레벨을 탐색하는 기능을 제공
 벽을 피해 목적지로 가고 싶다면?
 그냥 사용하시면 됩니다
 왜 커스텀이 필요한가?  이유 1. 특별한 연출
 언리얼 엔진 4 에 내장 네비게이션은
recastnavigation 기반
 일반적인 상황에서 잘 작동하지만</description>
    </item>
    
    <item>
      <title>(Book) 당신도 느리게 나이 들 수 있습니다.</title>
      <link>https://marsettler.com/book/you-can-also-frailty-slowly/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/you-can-also-frailty-slowly/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 정희원&lt;/li&gt;
&lt;li&gt;ISBN: 979-11-407-0258-9 03510&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>CTO</title>
      <link>https://marsettler.com/cto/</link>
      <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cto/</guid>
      <description>If I get the responsibility to promote someone, make sure to reread Chapter 31 of Peter Drucker&#39;s &amp;ldquo;Management Cases&amp;rdquo;.  link: https://mobile.twitter.com/John_Grib/status/1562055514380308480  버나드(@kms_bernard) 님의 트윗  많은 사람들이 간과하는 것 같은데, CTO는 회사의 경영자다. CTO가 하는 결정은 기술적인게 아니라 비즈니스적인것이어야 하고, 한편으로는 회사의 다른 비즈니스적인 결정에 기술적인 시야를 제공할 수 있어야한다.
  그렇기에 내가 경계하는 것은 비즈니스적인 임팩트를 고려하지 않고 기술적으로 옳은 일을 하려고 하는 것과, 비즈니스가 기술적인 위험에 노출되도록 방치하는 것이다.</description>
    </item>
    
    <item>
      <title>언리얼 엔진 플러그인</title>
      <link>https://marsettler.com/unreal-engine/plugin/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/unreal-engine/plugin/</guid>
      <description>언리얼 엔진 플러그인 박재완
jaewan.huey.park@gmail.com
 플러그인 에디터 안에서 프로젝트 단위로
켜고 끌 수 있는 코드 및 데이터 모음
 할 수 있는 일  런타임 게임플레이 기능 추가 엔진 기능 수정 새 에셋 유형 생성 에디터 메뉴, 툴바 명령 추가   엔진 시스템 중 일부도
플러그인으로 확장되어 있음
 하고 싶은 일(오늘 해 볼 일) 데이터 테이블을 확장하여 좀 더 편하게 데이터 추출(json 또는 csv?)
 작업 순서  새 플러그인 생성 데이터 테이블 확장 클래스 추가 팩토리 추가 액션 추가 팩토리에서 ConfigureProperties 가상함수 구현 액션에서 OpenAssetEditor 가상함수 구현 아이템 정보를 csv로 저장 에셋 저장시 csv도 자동저장 레벨 에디터 툴바에 버튼 추가   1.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 11주차(데이터 모델링)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-11/</link>
      <pubDate>Wed, 07 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-11/</guid>
      <description>고려사항  데이터 모델은 애플리케이션과 함께 변함 데이터 모델에 영향을 미치는 요소  사용자의 요구사항 읽기 및 쓰기 작업의 특성    모델링 순서  애플리케이션 워크로드 측정  데이터 사이즈 중요도에 따라 작업을 목록화   데이터와 데이터 간의 관계를 연결(CRD, Collection Relationship Diagram)  레퍼런스할지 임베드 할지 결정   각 컬렉션의 데이터 모델을 정리(디자인 패턴 적용)  임베딩 vs 레퍼런스 1. 임베딩 User ={&amp;#34;_id&amp;#34;: 1,&amp;#34;name&amp;#34;: &amp;#34;hueypark&amp;#34;,&amp;#34;items&amp;#34;:[{&amp;#34;type&amp;#34;: &amp;#34;sword&amp;#34;,&amp;#34;damage&amp;#34;: 10},{&amp;#34;type&amp;#34;: &amp;#34;spear&amp;#34;,&amp;#34;damage&amp;#34;: 20}]}2.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 10주차(트랜잭션)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-10/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-10/</guid>
      <description>트랜잭션 몽고디비는 4.0버전(2018년)부터 여러 도큐먼트에 대한 트랜잭션을, 4.2버전(2019년) 부터는 샤딩된 컬렉션에 대한 분산 트랜잭션을 지원하고 있습니다.
여러 도큐먼트에 대한 ACID 트랜잭션 지원은 다양한 상황에서 개발자가 쉽게 대응할 수 있게 합니다. 스냅샷 격리수준과 아토믹한 실행은 샤딩된 클러스터에서도 트랜잭션이 필요한 워크로드를 제어할 수 있게 합니다.
 In version 4.0, MongoDB supports multi-document transactions on replica sets. In version 4.2, MongoDB introduces distributed transactions, which adds support for multi-document transactions on sharded clusters and incorporates the existing support for multi-document transactions on replica sets.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 9주차(인덱스)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-9/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-9/</guid>
      <description>인덱스 인덱스는 쿼리가 효율적으로 실행되게 돕습니다. 쿼리에 적절한 인덱스가 있으면 이를 사용해 조회할 도큐먼트 수를 줄일 수 있습니다.
인덱스는 특정 필드 또는 필드들을 값에 따라 정렬해 저장합니다.
정렬된 인덱스는 효율적인 레인지 쿼리를 지원합니다.
몽고디비 인덱스는 B-tree 자료구조를 사용합니다.
_id 인덱스 몽고디비는 _id 유니크 인덱스를 만듭니다. _id 인덱스는 같은 _id 를 가진 도큐먼트가 두 개 생기는 것을 막습니다. _id 인덱스는 제거할 수 없습니다.
 NOTE: 샤딩된 클러스터에서 _id 필드를 샤드 키로 사용하지 않으면 오류방지를 위해 애플리케이션이 _id 필드의 유니크성을 보장해야 합니다.</description>
    </item>
    
    <item>
      <title>2020년 3월 6일 쿠키런: 킹덤 긴급점검</title>
      <link>https://marsettler.com/outage/2021-03-06-cookierun-kingdom-server-fault/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/outage/2021-03-06-cookierun-kingdom-server-fault/</guid>
      <description>쿠키런: 킹덤 긴급점검이 있었습니다. 접속자 수 증대와 함께 증가하는 부하를 개선했는데, 어떤 작업이 있었는지 궁금합니다.
개요  업데이트를 위한 점검(06:00~11:00)  점검 내용: 길드 시스템, 신규 쿠키 추가 및 오류사항 수정 등   15:00시 서버 안정화를 위한 긴급 점검 시작  갑작스러운 이용자 수 증가가 원인이라고 공지   22:00시 긴급 점검 완료  채용공고에서 흥미로운 부분 우대조건에 아래와 같은 내용이 있는데 어떤 마음인지 알 것 같습니다.
 try-catch 와 null 에 현실자각타임이 오신 분</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 8주차(aggregation)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-8aggregation/</link>
      <pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-8aggregation/</guid>
      <description>어그리게이션(Aggregation) 어그리게이션 작업은 데이터를 처리하여 계산된 결과를 반환합니다. 어그리게이션은 여러 도큐먼트의 값을 그룹화하고, 데이터에 다양한 작업을 수행한 후 단일 결과를 반환할 수 있습니다. MongoDB는 세 가지 어그리게이션을 제공합니다.
 Aggregation Pipeline Single Purpose Aggregation Operations Map-reduce  어그리게이션 파이프라인(Aggregation Pipeline) Aggregation pipeline 은 파이프라인 이용해 데이터의 집계를 처리하는 프레임워크입니다. 여러 스테이지에 걸쳐 도큐먼트들을 집계된 결과로 변경합니다.
아래 예를 살펴봅시다:
db.orders.aggregate([{ $match: { status: &amp;#34;A&amp;#34; } },{ $group: { _id: &amp;#34;$custmor_id&amp;#34;, total: { $sum: &amp;#34;$amount&amp;#34; } } }]) $match 스테이지는 도큐먼트들을 status 필드가 &amp;quot;A&amp;quot; 인 데이터만 다음 스테이지로 보냅니다.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 8주차(MongoDB CURD 맵 리듀스)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-8map-reduce/</link>
      <pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-8map-reduce/</guid>
      <description>Map-Reduce MongoDB 는 맵리듀스 대신 어그리게이션 파이프라인을 사용하길 권장하고 있으며, 상세내용은 아래와 같습니다.
어그리게이션 파이프라이프라인으로 맵 리듀스를 대체할 수 있습니다
어그리게이션 파이프라인은 맵-리듀스보다 좋은 성능과 사용성을 제공하며, $group, $merge와 같은 명령어를 사용해 맵리듀스를 어그리게이션 파이프라인으로 변경할 수 있습니다.
또 사용자 정의 기능이 필요한 경우 4.4 버전부터 $accumulator, $function 명렁어로 해결할 수 있습니다.
맵리듀스를 대체하는 어그리게이션 파이프라인을 알고 싶으면, 맵리듀스에서 어그리게이션 파이프라인으로 변경 나 맵리듀스 예제 문서를 참고하십시오.
참고자료  공식 문서 Map-Reduce  </description>
    </item>
    
    <item>
      <title>MongoDB 스터디 7주차(MongoDB CURD 읽기 연산)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-7/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-7/</guid>
      <description>db.collection.find() 쿼리 기준과 일치하는 도큐먼트에 대한 커서를 반환합니다.
파라미터  query: 필터에 사용할 쿼리 연산자입니다. projection: 도큐먼트에서 반환할 필드를 지정합니다. 생략하면 모든 필드가 반환됩니다.  db.collection.findOne() 쿼리 기준과 일치하는 하나의 도큐먼트를 반환합니다. 여러 도큐먼트들이 쿼리를 만족하면 디스크에 저장된 순서에 따라 첫 도큐먼트를 반환합니다. 만약 대상이 없으면 null을 반환합니다.
Read Concern readConcern 옵션을 사용해 읽기 작업의 일관성과 격리수준, 가용성을 제어할 수 있습니다.
4.4 버전부터 기본값의 전역 설정이 가능합니다. 세부정보는 setDefaultRWConcern에서 확인하십시오.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 6주차(MongoDB CURD 쓰기 연산)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-6/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-6/</guid>
      <description>Create Operations db.collection.insertOne() 도큐먼트를 하나 추가합니다.
문법 db.collection.insertOne(&amp;lt;document&amp;gt;,{writeConcern: &amp;lt;document&amp;gt;}) writeConcern  w: 몇 개의 mongod 에 저장 후 응답할 지 설정  &amp;lt;숫자&amp;gt;: 몇 개의 mongod 에 기록될 지 직접 지정 &amp;ldquo;majority&amp;rdquo;: 과반의 mongod 에 기록되게 설정 &amp;lt;커스텀 write concern 이름&amp;gt;: 특정 데이터 센터에 저장되게 설정가능, Custom Multi-Datacenter Write Concerns   j: 디스크의 저널에 저장 후 응답할지 설정 여부 timeout: 쓰기 제한 시간(밀리세컨드), 반환하기 전에 이미 성공한 쓰기 작업을 롤백하지 않음    예 db.</description>
    </item>
    
    <item>
      <title>(Book) TCP/IP 교과서</title>
      <link>https://marsettler.com/book/tcp-ip-in-24-hours/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/tcp-ip-in-24-hours/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 조 캐서드&lt;/li&gt;
&lt;li&gt;ISBN: 979-11-6521-399-2 93000&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>2020년 2월 19일 쿠키런: 킹덤 장기 점검(AWS)</title>
      <link>https://marsettler.com/outage/2021-02-21-cookierun-kingdom-server-faultaws/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/outage/2021-02-21-cookierun-kingdom-server-faultaws/</guid>
      <description>개요 2월 19일(금) 23:22 ~ 2월 20(토) 19:00 까지 쿠키런: 킹덤 긴급 점검이 있었습니다.
원인 아마존웹서비스 장애로 인한 긴급 점검이라고 안내하고 있습니다.
특이사항 동일한 원인(AWS 도쿄 리전 장애)으로 의심되는 리그 오브 레전드의 경우 2월 20일 00:45 에 정상화되었는데, 왜 19:00 까지 점검이 지속되었는지 궁금합니다. 아마 서버 아키텍처의 유연성 차이 또는 데이터베이스의 HA 구성 차이일 것으로 짐작됩니다.
참고자료  쿠키런: 킹덤 [안내] 아마존 웹서비스 데이터센터의 장애 발생 안내(정상화): https://cafe.naver.com/crkingdom/343860 쿠키런: 킹덤 [안내] 아마존 웹서비스 장애 정상화 및 서버 오픈 안내(2/20, 19:00): https://cafe.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 5주차(패턴과 안티패턴)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-5/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-5/</guid>
      <description>패턴 Attribute Pattern  상황  비슷한 필드가 많을 때 여러 필드에 걸쳐 조회하고 싶을때 필드가 일부 도큐먼트에만 있을 때   해결책  필드를 k/v 짝으로 나누어 서브도큐먼트에 저장   예  적용 전
{ &amp;#34;title&amp;#34;: &amp;#34;Star Wars&amp;#34;, &amp;#34;release_US&amp;#34;: &amp;#34;1977-05-20T01:00:00+01:00&amp;#34;, &amp;#34;release_France&amp;#34;: &amp;#34;1977-10-19T01:00:00+01:00&amp;#34;, &amp;#34;release_Italy&amp;#34;: &amp;#34;1977-10-20T01:00:00+01:00&amp;#34;, &amp;#34;release_UK&amp;#34;: &amp;#34;1977-12-27T01:00:00+01:00&amp;#34;, } 적용 후
{ &amp;#34;title&amp;#34;: &amp;#34;Star Wars&amp;#34;, &amp;#34;director&amp;#34;: &amp;#34;George Lucas&amp;#34;, &amp;#34;releases&amp;#34;: [ { &amp;#34;location&amp;#34;: &amp;#34;USA&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;1977-05-20T01:00:00+01:00&amp;#34; }, { &amp;#34;location&amp;#34;: &amp;#34;France&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;1977-10-19T01:00:00+01:00&amp;#34; }, { &amp;#34;location&amp;#34;: &amp;#34;Italy&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;1977-10-20T01:00:00+01:00&amp;#34; }, { &amp;#34;location&amp;#34;: &amp;#34;UK&amp;#34;, &amp;#34;date&amp;#34;: &amp;#34;1977-12-27T01:00:00+01:00&amp;#34; }, ] }  장점  인덱싱하기 쉬움 더 적은 인덱스가 필요함 쿼리가 간단해지고 일반적으로 빨라짐    Extended Reference Pattern  상황  너무 많은 조인이 발생함   해결책  주가 되는 도큐먼트에 쪽에 필드를 임베딩함   예  적용 전</description>
    </item>
    
    <item>
      <title>로블록스 장애 디브리핑(Roblox Return to Service 10/28-10/31 2021)</title>
      <link>https://marsettler.com/outage/2022-01-20-roblox-outage-debriefing/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/outage/2022-01-20-roblox-outage-debriefing/</guid>
      <description>로블록스는 2021년 10월 28일부터 10월 31일까지 73시간의 장애 대한 디브리핑을 하고 자사 블로그에 공개했습니다.
 최근의 개선사항과 계획된 작업들 중 인상적인 내용 몇가지를 기록합니다.
모니터링 시스템 개선 모니터링 시스템이 메인 시스템 간 순환 종속성 제거했습니다. 메인 시스템 장애가 모니터링 시스템 장애로 이어졌고, 그로 인해 장애 원인를 찾을 데이터를 빠르게 확보할 수 없었음
장애의 주 원인(Consul and BoltDB) 모니터링 시스템을 확장했습니다.
서비스 시작과 설정 관리방식 개선 서비스 재시작 시 서비스에 필요한 캐시 배치, 웜업을 위해 서비스 복구가 느려졌습니다.</description>
    </item>
    
    <item>
      <title>뉴스피드 2021</title>
      <link>https://marsettler.com/newsfeed/newsfeed-2021/</link>
      <pubDate>Fri, 29 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/newsfeed/newsfeed-2021/</guid>
      <description>2020년 7월  승진은 후불제 &amp;hellip; 이미 다음 단계 일은 하고 있음 + 그걸 얼마나 잘 당연시하는가
 쑤(@sajiiinnn) 님의 트윗
2020년 6월  끝으로 어느 팀이든 좋은 코드를 마스터한 시니어만으로 구성되지 않는다. 프로그래밍팀은 하나의 마을이다. 거기엔 아름답고 웅장하게 세워진 성도 있고 이제 첫 삽을 떠본 주니어가 만든 초가집도 있다. 시니어의 역할은 주니어의 초가집 엉성한 부분을 지적하는것에서 끝나지 않는다. 진짜 마스터는 계속해서 자기 성을 짓는 사람이다. 주니어가 지켜보며 영감 (inspiration)을 얻을만큼 계속해서 조금 더 아름다운 성을 만드는 사람이다.</description>
    </item>
    
    <item>
      <title>2020년 1월 25일 쿠키런: 킹덤 장기 점검</title>
      <link>https://marsettler.com/outage/2021-01-25-cookierun-kingdom-server-fault/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/outage/2021-01-25-cookierun-kingdom-server-fault/</guid>
      <description>개요 쿠키런: 킹덤이 오픈 후 알 수 없는 이유로 오랜 시간 점검하였음
총 점검 시간: 39시간 40분(2021-01-25 16:50:00 ~ 2021-01-25 03:30:00)
원인 기술적인 원인은 공개하지 않았음
나중에라도 데브시스터즈에서 공유해주시면 흥미로울 것 같음
 여러분께 &amp;lt;쿠키런: 킹덤&amp;gt;을 선보이며 여러 가지 상황에 대비할 준비를 해왔지만 이번에 발생한 오류는 예상치 못한 치명적인 문제였고, 킹덤팀에서도 오랜 시간을 들여 수정하게 되었습니다.
 점검 보상  크리스탈 12,000개 스태미너 젤리 50개 킹덤 아레나 티켓 30개 코인 50,000개 가속원 30분 5개 경험의 별사탕 레벨 4 100개  긴급 점검 보상은 2021년 1월 25일(월) 점검 전까지 생성된 계정에 한하여 지급됩니다.</description>
    </item>
    
    <item>
      <title>(Book) 팀장의 탄생</title>
      <link>https://marsettler.com/book/the-making-of-a-manager/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/the-making-of-a-manager/</guid>
      <description>지은이: Julie Zhuo ISBN: 979-11-6521-268-1   38쪽
 진정한 관리자의 본분은 &amp;lsquo;여러 사람이 협력하는 집단에서 더 좋은 성과를 도출하는 것&#39;이다.
 40쪽
 하지만 시간이 지나면 진실이 드러나는 법이다. 유능한 인재는 자신을 홀대하는 상사나 존경심이 생기지 않는 상사 밑에서 몇 년이나 참고 버티지 않는다. 그리고 유능한 관리자는 쇄신을 단행할 권한만 준다면 형편없는 성과를 내던 팀을 환골탈태시킨다.
 47쪽
 모름지기 관리자라면 팀의 목적, 사람, 프로세스를 개선함으로써 팀의 전체적인 성과에 최대한 멀티플라이어 효과를 내야 한다.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 3주차(샤딩을 통한 시스템 확장)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-3/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-3/</guid>
      <description>샤딩 샤딩은 여러 물리장비에 데이터를 분산하는 방법 MongoDB 는 샤딩을 이용해 매우 큰 데이터에 대해 높은 처리량을 제공
시스템을 확장하는 두 가지 방법  스케일업 스케일아웃(MongoDB 는 샤딩 통해 스케일아웃을 지원)  대상이 되는 자원  CPU 네트워크 메모리 디스크  고려사항 경제적으로 이득인가?
실현가능한가?
예 1)  서버의 CPU 자원에 한계가 다가오고 필요한 CPU 자원은 2배로 예상됨 다음으로 좋은 CPU는 처리량이 10배이고 비용도 10배임 스케일업을 한다면 10배의 비용으로 2배의 CPU만 사용 스케일아웃을 한다면 2배의 비용으로 2배의 CPU 사용가능  예 2)  현재 사용가능한 가장 좋은 CPU를 사용 중 자원에 한계가 다가옴 스케일업으로 해결불가 스케일아웃으로 해결가능  예 3)  디스크를 1TB 에서 20TB 로 20배 스케일업 백업, 복구, resync 에 20배의 시간이 듬 스케일아웃한다면 병렬화의 장점을 사용해 시간을 절약할 수 있음 또 MongoDB의 경우 큰 데이터는 큰 인덱스를 만들기 때문에 메모리 사용량도 함께 증가함  기타 장점 분산처리에 용이하기 때문에 MongoDB 에서 제공하는 존 샤딩, 어그리게이션 등의 기능을 효과적으로 사용가능</description>
    </item>
    
    <item>
      <title>가치투자자 일지</title>
      <link>https://marsettler.com/value-investors-diary/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/value-investors-diary/</guid>
      <description>대한민국    날짜 회사 보고서 주가 시가총액 매출 영업이익 당기순이익 특이사항     2021-04-11 엔씨소프트(KRX: 036570) 사업보고서 (2020.12) 925,000원 20조 3,075억원 5,613억원 1,567억원 803억원    2021-04-11 넷마블네오 사업보고서 (2020.12) 138,000원 1조 7,194억원 881억원 432억원 386억원    2021-04-11 라인게임즈 [한경 CFO Insight] 라인게임즈 텐센트 등에서 1000억원 유치  9,000억원(추정)    투자유치를 위한 유상증자 2회 있었음   2021-03-01 엔씨소프트(KRX: 036570) 분기보고서 (2020.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 2주차(MongoDB 설치하기)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-2/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-2/</guid>
      <description>Replica Set Replica set 은 같은 데이터를 가진 mongod 프로세스 그룹입니다. 이를 통해 MongoDB는 데이터 중복과 고가용성을 제공합니다. 그렇기 때문에 일부 서버에 장애가 발생하더라고 전체 시스템은 정상적으로 운영될 수 있습니다.
특정한 경우 복제를 통해 읽기 수용량을 증가시킬 수 있습니다. 또 서로 다른 데이터센터에 복사본을 유지하여 가용성을 증가시킬수 있도 장애복구, 분석, 백업 목적으로 추가 복사본을 만들 수도 있습니다.
Replication Replica set 은 데이터를 가진 여러 노드로 이루어지며(데이터가 없는 아비터가 추가될 수도 있음), 이 중 하나만이 primary 노드가 됩니다.</description>
    </item>
    
    <item>
      <title>MongoDB 스터디 1주차(MongoDB 기초)</title>
      <link>https://marsettler.com/mongodb/mongodb-study-week-1/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/mongodb/mongodb-study-week-1/</guid>
      <description>들어가며 지금까지 필요 없는 로그성 데이터를 MongoDB에 저장한 경험이 있으며, 대부분은 RDBMS를 사용했습니다. MongoDB도 많이 발전하였고(트랜잭션, 컨시스턴시 관련) 우리의 MongoDB 운영능력도 증가했기 떄문에 애플리케이션에서 스케일아웃을 핸들링하지 않고 MongoDB를 사용해 개발속도를 향상시키고 싶습니다.
MongoDB란 도큐먼트를 기본 자료형으로 사용하는 NoSQL 데이터베이스
도큐먼트와 컬렉션  도큐먼트  도큐먼트는 field와 value의 쌍으로 데이터를 저장하고 관리 JSON 형태로 사용되며 실제로는 BSON으로 시리얼라이즈되어 저장됨    { &amp;#34;name&amp;#34; : &amp;#34;hueypark&amp;#34;, &amp;#34;title&amp;#34; : &amp;#34;software engineer&amp;#34; }  컬렉션  도큐먼트들이 모여있는 집합 일반적으로 한 컬렉션에 있는 도큐먼트들은 공통된 필드를 가지고 있음    BSON BSON은 바이너리로 시리얼라이즈 된 JSON</description>
    </item>
    
    <item>
      <title>와인 일지</title>
      <link>https://marsettler.com/wine-diary/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/wine-diary/</guid>
      <description>   이름 가격 구매 장소 구매 날짜 사진 시음 날짜 후기     Viberti Barbera La Gemella 2019 27,000원 뱅가드와인머천트(광화문점) 2021-02-09      Colombina San Martino 2012 41,000원 뱅가드와인머천트(광화문점) 2021-02-09      BARBARESCO BRIC MICCA 2016 55,000원 뱅가드와인머천트(광화문점) 2021-02-09      Soumah Single Vineyard Chardonnay 2019 45,000원 뱅가드와인머천트(광화문점) 2021-01-11      Essay Chenin Blanc 2020 12,900원 뱅가드와인머천트(광화문점) 2021-01-11  2021-01-15 살짝 단 맛, 가성비가 좋은 와인   Viberti Giovanni La Gemella Barbera d’Alba 2019 24,300원 뱅가드와인머천트(광화문점) 2021-01-11  2021-01-26 향이 좋음   Viberti Giovanni Nebbiolo Langhe 2018 34,200원 뱅가드와인머천트(광화문점) 2021-01-11      Bleda Pino Doncel 12 Meses 2018 25,000원 뱅가드와인머천트(광화문점) 2021-01-11      Essay Cabernet Sauvignon 2018 12,900원 뱅가드와인머천트(광화문점) 2021-01-11      THE BALVENIE DOUBLEWOOD12 137,000원 (주)현대백화점 신촌점 2021-01-09      Talo Primitivo di Manduria San Marzano 2018 30,000원 (주)현대백화점 신촌점 2021-01-09      Trapiche Broquel Malbec 2018 20,000원 (주)현대백화점 신촌점 2021-01-09  2021-01-10 별로임, 와인의 향이 없고 술 맛만 남    </description>
    </item>
    
    <item>
      <title>Digital Marketing</title>
      <link>https://marsettler.com/digital-marketing/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/digital-marketing/</guid>
      <description>&lt;p&gt;Write something about digital marketing.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Favorite Songs</title>
      <link>https://marsettler.com/favorite-songs/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/favorite-songs/</guid>
      <description>&lt;p&gt;It is a list of my favorite songs. I will update it from time to time.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Book) 0년차 게임개발</title>
      <link>https://marsettler.com/book/game-development-for-0-years/</link>
      <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/game-development-for-0-years/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 김다훈, 박소연, 이재호, 주진영&lt;/li&gt;
&lt;li&gt;ISBN: 979-11-971861-0-3&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>물리가 흥미로운 게임들</title>
      <link>https://marsettler.com/game-design/games-with-interesting-physics/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/game-design/games-with-interesting-physics/</guid>
      <description>Totally Accurate Battle Simulator 링크: https://landfall.se/
Totally Accurate는 전혀 아니고 약간 바보같은 연출과 적당한 물리처리로 의외성을 만들어내는 게임입니다.
Besiege 링크: http://www.besiege.spiderlinggames.co.uk/
모듈화된 부품을 조립하여 공성병기? 를 만드는데, 그 조합의 결과가 물리처리와 합쳐저 놀라운 수준의 의외성을 보여주고 있습니다.</description>
    </item>
    
    <item>
      <title>뉴스피드 2020</title>
      <link>https://marsettler.com/newsfeed/newsfeed-2020/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/newsfeed/newsfeed-2020/</guid>
      <description>2020년 12월 Disagree and commit 이병준님의 면접시 조심하면 좋은 것들 중 일부
링크: https://youtu.be/SZEHjcDSEdE?t=183
 자기가 동의하지 않는 내용이라도 팀원의 한 사람으로서 동의를 했다면 그 동의한 내용을 반드시 따라야 한다.
 기계인간님의 개발자의 성격 이야기 어떤 역할을 하느냐에 따라 조금씩 다르겠지만, 개발자도 적극적이어야 할 필요가 있다는 점에서 크게 공감합니다.
 사람마다 회사생활하며 느낀바는 다르겠지만 개발자는 어느 수준부터는 축구선수같길 요구받는다. 내가 수비수라고 수비만 하면 안된다. 내가 공격해야 하는 상황일 땐 공 차고 나가면서 골도 넣을 수 있어야 한다.</description>
    </item>
    
    <item>
      <title>게임 디자인</title>
      <link>https://marsettler.com/game-design/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/game-design/</guid>
      <description>절대적 공정함보다는 다양한 변수가 게임성에 더 의미있을 수 있음 유튜브에서 실력갓겜이 오래 살아남기 위해 반드시 필요한 것 이란 영상을 보았습니다. 흔히 생각하는 절대적 공정함이 게임성에 큰 도움이 되지 않을 수도 있다는 생각을 했습니다.</description>
    </item>
    
    <item>
      <title>경제</title>
      <link>https://marsettler.com/the-game-i-want-to-make/economy/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/the-game-i-want-to-make/economy/</guid>
      <description>&lt;h3 id=&#34;-&#34;&gt;아직 작성중입니다.&lt;/h3&gt;
&lt;p&gt;사용자들이 서로 상호작용하는 게임에서 경제는 매우 중요합니다. 하지만 많은 경우 잘 관리되지 못하며,
심한 경우에는 패치가 진행될 때마다 극심한 인플레이션으로 재화의 가치가 바닥으로 떨어지곤 합니다.
이 글에서는 극심한 인플레이션의 문제점과 그 해결방안에 대해 이야기해보겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Book) 함께 자라기</title>
      <link>https://marsettler.com/book/grow-together/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/book/grow-together/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;지은이: 김창준&lt;/li&gt;
&lt;li&gt;ISBN: 9788966262335&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>브림스톤과 미스트: 10월 21일</title>
      <link>https://marsettler.com/albion-online/brimstone-mist-arrives-october-21/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/albion-online/brimstone-mist-arrives-october-21/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://albiononline.com/en/news/brimstone-mist-arrives-october-21&#34;&gt;https://albiononline.com/en/news/brimstone-mist-arrives-october-21&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;오염된 던전에 새로운 적들을 추가되고 아발론의 길에 새로운 생선이 생기며 광범위한 전투 밸런싱을 조정하는 주요 패치가 준비되었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://assets.albiononline.com/uploads/media/default/media/3ad3aca6b7325fc257ec6368a446bbc287b147af.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>내가 만들고 싶은 게임</title>
      <link>https://marsettler.com/the-game-i-want-to-make/the-game-i-want-to-make/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/the-game-i-want-to-make/the-game-i-want-to-make/</guid>
      <description>&lt;h3 id=&#34;---&#34;&gt;내가 만들고 싶은 게임&lt;/h3&gt;
&lt;p&gt;게임 서버 프로그래머로 수 년 간 일했지만, 업무의 대부분의 시간은 디자이너가 제공해 주는 아이디어의 구현에 치중되어 있었습니다. 이 글에서는 스스로 만들고 싶은 게임에 대해 이야기 합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raft Consensus Algorithm</title>
      <link>https://marsettler.com/distributed-system/raft-consensus-algorithm/</link>
      <pubDate>Tue, 29 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/distributed-system/raft-consensus-algorithm/</guid>
      <description>Raft Consensus Algorithm은 분산 환경에서 사용할 수 있는 합의 알고리즘입니다. 이를 사용해 분산 환경에서 모든 노드의 상태를 동일하게 유지가능합니다.
자세한 설명은 The Raft Consensus Algorithm 에서 볼 수 있습니다.
etcd 안에 훌륭한 Raft 라이브러리가 있습니다.</description>
    </item>
    
    <item>
      <title>Single Server MMORPG: Technology stacks</title>
      <link>https://marsettler.com/single-server-mmorpg/technology-stacks/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/single-server-mmorpg/technology-stacks/</guid>
      <description>&lt;h2 id=&#34;technology-stacks&#34;&gt;Technology stacks&lt;/h2&gt;
&lt;p&gt;This technology stack is not consistently enforced for all MMORPGs. However, it will be the basis for technical decisions, so that I will mention it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Single Server MMORPG: What is single server MMORPG?</title>
      <link>https://marsettler.com/single-server-mmorpg/what-is-single-server-mmorpg/</link>
      <pubDate>Mon, 21 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/single-server-mmorpg/what-is-single-server-mmorpg/</guid>
      <description>&lt;p&gt;What is a single server MMORPG?&lt;/p&gt;
&lt;p&gt;Before I begin, let&#39;s clarify the concept of what we&#39;re going to talk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Leadership</title>
      <link>https://marsettler.com/leadership/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/leadership/</guid>
      <description>공동목표를 위해 스스로 노력하도록 사람들에게 영향력을 행사하는 과정1
  원소랑님 트위터&amp;#8617;
   </description>
    </item>
    
    <item>
      <title>페블(Pebble): RocksDB에서 영감을 받은 키밸류 저장소</title>
      <link>https://marsettler.com/cockroachdb-introducing-pebble/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-introducing-pebble/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/cockroachdb/pebble&#34;&gt;페블(Pebble)&lt;/a&gt;은 &lt;a href=&#34;https://rocksdb.org/&#34;&gt;RocksDB&lt;/a&gt;에서 영감을 받은 키밸류 저장소입니다. 카크로치디비 블로그에 새로운 &lt;a href=&#34;https://www.cockroachlabs.com/blog/pebble-rocksdb-kv-store/&#34;&gt;Pebble 이야기&lt;/a&gt;가 포스팅되었는데 그 내용을 요약하고 의견을 덧붙입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Single Server MMORPG: Introduction</title>
      <link>https://marsettler.com/single-server-mmorpg/introduction/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/single-server-mmorpg/introduction/</guid>
      <description>&lt;p&gt;This post is the first of the Single Server MMORPG server series.&lt;/p&gt;
&lt;p&gt;Single Server MMORPG server uses one logically server instead of using multiple separate sharded servers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>게임 서버 아키텍처</title>
      <link>https://marsettler.com/game-server-architecture/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/game-server-architecture/</guid>
      <description>&lt;p&gt;아직 작성중입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;게임 서버 아키텍처에 관한 이야기를 합니다. 대부분의 내용은 MMORPG에 특화되어 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Write Ahead Logging</title>
      <link>https://marsettler.com/write-ahead-logging/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/write-ahead-logging/</guid>
      <description>&lt;p&gt;Write Ahead Logging(WAL)은 데이터베이스 시스템에서 ACID의 특성 가운데 원자성과 내구성을 제공하는 기술입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>데이터베이스</title>
      <link>https://marsettler.com/database/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/database/</guid>
      <description>Write Ahead Logging</description>
    </item>
    
    <item>
      <title>TCP</title>
      <link>https://marsettler.com/tcp/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/tcp/</guid>
      <description>&lt;p&gt;전송 제어 프로토콜(Transmission Control Protocol)은 인터넷 프로토콜 스위트(IP)의 핵심 프로토콜 중 하나로, IP와 함께 TCP/IP라는 명칭으로도 널리 불린다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>네트워크</title>
      <link>https://marsettler.com/network/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/network/</guid>
      <description>TCP</description>
    </item>
    
    <item>
      <title>(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: Bugfix and Chill(버그를 수정하자!)</title>
      <link>https://marsettler.com/cockroachdb-livestream-bugfix-and-chill/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-livestream-bugfix-and-chill/</guid>
      <description>&lt;iframe height=&#34;400&#34; width=&#34;100%&#34; src=&#34;https://www.youtube.com/embed/nFmDJP-fNRQ&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;이번 주에도 &lt;a href=&#34;https://mobile.twitter.com/JordanALewis&#34;&gt;@JordanALewis&lt;/a&gt;의 진행되었습니다. &lt;code&gt;Bugfix and Chill&lt;/code&gt;이란 제목으로 여러가지 버그성 이슈를 살펴봅니다.&lt;/p&gt;
&lt;p&gt;이번에도 흥미로운 부분을 정리해 안내드리며, 내일 새벽 4시에는 &lt;code&gt;streaming internal query engine&lt;/code&gt;에 관한 라이브 방송이 &lt;a href=&#34;https://mobile.twitter.com/JordanALewis/status/1261143648932179970&#34;&gt;계획&lt;/a&gt;되어 있으니 많은 관심 부탁드립니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>해결하고 싶은 문제들</title>
      <link>https://marsettler.com/problems-want-to-solve/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/problems-want-to-solve/</guid>
      <description>&lt;p&gt;해결하고 싶은 문제들을 기록합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: CockroachDB is learning the secret technique LISTEN/NOTIFY</title>
      <link>https://marsettler.com/cockroachdb-livestream-issue-41522/</link>
      <pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-livestream-issue-41522/</guid>
      <description>&lt;iframe height=&#34;400&#34; width=&#34;100%&#34; src=&#34;https://www.youtube.com/embed/r0SBgOePc6I&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;https://mobile.twitter.com/JordanALewis&#34;&gt;@JordanALewis&lt;/a&gt;는 매 주 토요일 새벽
4시에 카크로치디비 관련 라이브스트림을 진행하고 있습니다. 이번에는 PostgreSQL의 LISTEN/NOTIFY를
구현하고 있는데, 흥미로운 부분을 정리해 안내드립니다.&lt;/p&gt;
&lt;p&gt;이슈: &lt;a href=&#34;https://github.com/cockroachdb/cockroach/issues/41522&#34;&gt;sql: support NOTIFY, LISTEN, and UNLISTEN commands of postgresql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PR: &lt;a href=&#34;https://github.com/cockroachdb/cockroach/pull/48308&#34;&gt;https://github.com/cockroachdb/cockroach/pull/48308&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020년 성공 계획</title>
      <link>https://marsettler.com/successful-plan-2020/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/successful-plan-2020/</guid>
      <description>상황 확인 상황: 소프트웨어 엔지니어로 5년 3개월가량 일하고 있습니다. 그동안 나름대로 열심히 일하였고, 동료들과 회사에게 긍정적인 평가를 받고 있습니다. 하지만 기대보다 부족하고, 현재 수횅하는 업무 특성상 조금은 정체되고 있는 건 아닌가 걱정됩니다.
계획 수립 목표: 엔지니어링 리더십 발휘 핵심 결과:  동료들과 회사에게 더욱 인정받기(수치 공개불가) 엔지니어링 문제로 인한 장애 발생률 측정  목표: 스케일아웃 가능한 데이터베이스 솔루션 확보 핵심 결과:  CockroachDB 이슈 8개 해결(1개/월) CockroachDB 아키택처, 기술 8개 공유(1개/월)  </description>
    </item>
    
    <item>
      <title>How to be successful(성공하는 방법)</title>
      <link>https://marsettler.com/how-to-be-successful/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/how-to-be-successful/</guid>
      <description>시작하기 전에 당신에게는 무엇이 성공입니까? 사람들은 각자의 가치관에 따라 성공이란 단어를 매우 많은 다른 의미로 정의합니다. 이 성공하는 방법이란 글에서는 성공을 아래와 같이 정의하고 있습니다.
 성공: 자기가 가진 전문기술을 사용하여 사회와 인류에 기여하는 행위
 가능한 한 많이 또 빨리 아래 단계를 수행합니다  상황 확인 계획 수립 행동 피드백 반영  수행 2020년 성공 계획</description>
    </item>
    
    <item>
      <title>CockroachDB</title>
      <link>https://marsettler.com/cockroachdb/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb/</guid>
      <description>페블(Pebble): RocksDB에서 영감을 받은 키밸류 저장소
(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: Bugfix and Chill(버그를 수정하자!)
(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: CockroachDB is learning the secret technique LISTEN/NOTIFY
피터 매티스와의 인터뷰 - Software Engineering Daily
스프린트서울 참가자분들을 위한 카크로치디비(CockroachDB)
카크로치디비의 컬럼 패밀리</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://marsettler.com/c&#43;&#43;/c&#43;&#43;/</link>
      <pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/c&#43;&#43;/c&#43;&#43;/</guid>
      <description>친애하는 나의 C++
std::shared_ptr is not thread safe
C++ 좋은 읽을거리</description>
    </item>
    
    <item>
      <title>Go의 철학</title>
      <link>https://marsettler.com/go/the-zen-of-go/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/the-zen-of-go/</guid>
      <description>Dave Cheney의 The Zen of Go를 번역했습니다. 좀 더 알고 싶으신 분은 발표 영상과 블로그 글을 함께 참고해 주십시오.
 Go의 철학 쉽고, 읽기 좋으며, 유지가능한 Go 코드 작성을 위한 10가지 엔지니어링 가치. 고퍼콘 이스라엘 2020에 발표하였음.
패키지는 하나의 목적만을 달성합니다 잘 디자인된 Go 패키지는 단 하나의 아이디어와 관련 동작을 제공합니다. 좋은 Go 패키지를 위해 좋은 이름을 먼저 정해야 합니다. 엘리베이터 피치라고 생각하며 패키지 이름을 정해보십시오.
에러는 명시적으로 처리합니다 단단한 프로그램은 문제가 생기기 전에 실패처리를 하는 요소들로 이루어져 있습니다.</description>
    </item>
    
    <item>
      <title>xvfb를 이용한 Go headless 테스트</title>
      <link>https://marsettler.com/go/go-headless-test-with-xvfb/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go-headless-test-with-xvfb/</guid>
      <description>Go에서 GLFW 등을 이용해 그래픽스 관련 작업을 할 때에도 자동화 테스트 구성이 가능합니다. 하지만 GitHub Actions과 같이 디스플레이가 없는 환경에서는 의존성을 가지고 있다는 이유만으로 그래픽스 관련 테스트가 실패합니다.
xvfb는 메뉴얼에서 virtual framebuffer X server for X Version 라고 소개되고 있으며, 서버 사이드 테스트를 위해 주로 사용됩니다.
Ubuntu 기준으로 sudo apt install xvfb로 설치하고 xvfb-run에 이어서 테스트 명령어를 추가하여 테스트할 수 있습니다. 실제 GitHub Actions에 적용한 예시를 공유드립니다.</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://marsettler.com/go/go/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go/</guid>
      <description>xvfb를 이용한 Go headless 테스트
Go의 철학
Go module에서 GitHub private repository 사용
좋은 읽을거리</description>
    </item>
    
    <item>
      <title>Go module에서 GitHub private 저장소 사용</title>
      <link>https://marsettler.com/go/using-go-module-with-github-private-repository/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/using-go-module-with-github-private-repository/</guid>
      <description>Go module에서 GitHub private 저장소를 사용하는 방법입니다.
 git 설정에서 GitHub 접근을 계정과 토큰을 사용하게 변경 git config --global url.&amp;#34;https://${GITHUB_USER}:${{GITHUB_TOKEN}}@github.com&amp;#34;.insteadOf &amp;#34;https://github.com&amp;#34; GOPRIVATE 환경변수에 private 저장소 등록 GOPRIVATE=&amp;#34;github.com/hueypark/asset&amp;#34; </description>
    </item>
    
    <item>
      <title>Wiki</title>
      <link>https://marsettler.com/wiki/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/wiki/</guid>
      <description>내가 만들고 싶은 게임
C++
CockroachDB
CTO
Database(데이터베이스)
Distributed System(분산 시스템)
Game Server Architecture(게임 서버 아키텍처)
Go
해결하고 싶은 문제들
Remote work(원격근무)
Single Server MMORPG
How to be successful(성공하는 방법)
Interior(인테리어)
Leadership(리더십)
Network(네트워크)</description>
    </item>
    
    <item>
      <title>박재완</title>
      <link>https://marsettler.com/about-me/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/about-me/</guid>
      <description>&lt;p&gt;C++, Go 등의 언어를 주로 사용하여 MMORPG 서버를 개발합니다. 많은 시간을 코드리뷰, 생산성 향상을 위한 자동화 툴 개발, 빌드 및 배포 자동화에 사용하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(Book) BPF Performance Tools</title>
      <link>https://marsettler.com/posts/2020-02-20-bpf-performance-tools/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2020-02-20-bpf-performance-tools/</guid>
      <description>&lt;p&gt;BPF Performance Tools&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(very good first issue) #41274 sql: Support aggregate functions for statistics</title>
      <link>https://marsettler.com/cockroachdb-issue-41274-vgfi-sql-support-aggregate-functions-for-statistics/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-issue-41274-vgfi-sql-support-aggregate-functions-for-statistics/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/cockroachdb/cockroach/issues/41274&#34;&gt;카크로치디비 이슈 #41274&lt;/a&gt; sql: Support aggregate functions for statistics&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;개요&lt;/h3&gt;
&lt;p&gt;이슈 #41274는 &lt;code&gt;PostgreSQL&lt;/code&gt;에서 지원하는 &lt;a href=&#34;https://www.postgresql.org/docs/9.1/functions-aggregate.html&#34;&gt;aggregate function&lt;/a&gt;들의 구현을 요구하며, 대상은 아래와 같습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(very good first issue) #44135 sql: add support for COMMENT ON VIEW, COMMENT ON SEQUENCE</title>
      <link>https://marsettler.com/cockroachdb-issue-44135-sql-add-support-for-comment/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-issue-44135-sql-add-support-for-comment/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/cockroachdb/cockroach/issues/44135&#34;&gt;카크로치디비 이슈 #44135&lt;/a&gt; sql: add support for COMMENT ON VIEW, COMMENT ON SEQUENCE&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;개요&lt;/h3&gt;
&lt;p&gt;이슈 #44135 &lt;code&gt;PostgreSQL&lt;/code&gt;에서 지원하는 &lt;a href=&#34;https://www.postgresql.org/docs/9.1/functions-aggregate.html&#34;&gt;COMMENT ON&lt;/a&gt; 문법의 &lt;code&gt;VIEW&lt;/code&gt;, &lt;code&gt;SEQUENCE&lt;/code&gt;에 대한 지원을 요구합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>스프린트서울 참가자분들을 위한 카크로치디비(CockroachDB)</title>
      <link>https://marsettler.com/sprintseoul-cockroachdb/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/sprintseoul-cockroachdb/</guid>
      <description>스프린트에 참가하는 이유 왜 스프린트에 참가하시나요? 참가할 때마다 여러가지 이유를 생각해보지만 정답이 있는 문제는 아닙니다. 저는 처음 스프린트에 참가하며 다음과 같은 동기를 가지고 있었습니다.
 Go 언어 개발능력을 향상시키고 싶었습니다. 가까운 미래에 애플리케이션 개발을 위해 단단하고 확장가능한 데이터베이스를 사용하고 싶었습니다.  아직 목표를 완전히 이룬 것은 아니지만 스프린트서울에 처음 참가한 2019년 6월보다는 한 걸음 나아가 있습니다.
당신에게는 어떤 목표가 있나요? 저보다 더 멋진 목표와 동기가 있을 것으로 기대됩니다. 댓글로 저에게도 알려주십시오!</description>
    </item>
    
    <item>
      <title>피터 매티스와의 인터뷰 - Software Engineering Daily</title>
      <link>https://marsettler.com/cockroachdb-with-peter-mattis-sedaily/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-with-peter-mattis-sedaily/</guid>
      <description>&lt;p&gt;카크로치 연구소의 피터 매티스가 소프트웨어 엔지니어링 데일리와 인터뷰를 진행했습니다. 몇 가지 흥미로운
부분을 요약해 정리했으며, 전체 내용은 &lt;a href=&#34;https://softwareengineeringdaily.com/2020/04/28/cockroachdb-with-peter-mattis/&#34;&gt;소프트웨어 엔지니어링 데일리&lt;/a&gt;에서
들을 수 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>원격근무</title>
      <link>https://marsettler.com/remote-work/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/remote-work/</guid>
      <description>&lt;p&gt;원격근무에 대한 생각을 기록합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>인테리어</title>
      <link>https://marsettler.com/interior/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/interior/</guid>
      <description>&lt;p&gt;Write about interior design.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2020-02 일지</title>
      <link>https://marsettler.com/posts/2020-02-01-diary-2020-02/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2020-02-01-diary-2020-02/</guid>
      <description>&lt;p&gt;2020년 2월 일지입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(안내서) 카크로치디비(CockroachDB) 블로그 / 카크로치디비 19.2 출시</title>
      <link>https://marsettler.com/posts/2019-11-13-guide-with-heart-cockroachdb-19dot2-release/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-11-13-guide-with-heart-cockroachdb-19dot2-release/</guid>
      <description>&lt;p&gt;카크로치디비 19.2가 릴리즈되었습니다. 레이턴시, 신뢰성, 편의성 측면에서 상당한 개선을 이야기하고 있는데, 인상 깊은 내용 몇 가지를 안내해 드리겠습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sql: COMMENT ON INDEX 지원(CockroachDB issue #41316)</title>
      <link>https://marsettler.com/posts/2019-10-20-cockroach-issue-41316/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-20-cockroach-issue-41316/</guid>
      <description>&lt;p&gt;이슈: &lt;a href=&#34;https://github.com/cockroachdb/cockroach/issues/41316&#34;&gt;sql: add support for COMMENT ON INDEX #41316&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sql: COMMENT ON INDEX 지원 작업을 했습니다. 이번에는 이슈 등록자가 저에게 먼저 연락을 하는 새로운 경험을 했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>삭제될 WAL, MANIFEST, sstable을 보관하는 기능 제공 (Pebble issue #284)</title>
      <link>https://marsettler.com/posts/2019-10-15-pebble-issue-284/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-15-pebble-issue-284/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;이슈: &lt;a href=&#34;https://github.com/cockroachdb/pebble/issues/284&#34;&gt;&lt;a href=&#34;https://github.com/cockroachdb/pebble/issues/284&#34;&gt;https://github.com/cockroachdb/pebble/issues/284&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이번에는 Pebble에서 아무에게도 할당되지 않은 이슈를 선택해 수정했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>초보다 정밀한 단위에 대한 `EXTRACT` 명령이 postgres와 다르게 동작함(CockroachDB issue #40683)</title>
      <link>https://marsettler.com/posts/2019-10-13-cockroach-issue-40683/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-13-cockroach-issue-40683/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;이번에는 간단하게 해결할 수 있는 이슈를 수정했습니다. 이 정도의 이슈는 처음 스프린트에 참여하는 분도 해결할 수 있을 것으로 기대합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>거대한 단일 MMORPG 서버</title>
      <link>https://marsettler.com/huge-single-mmorpg-server/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/huge-single-mmorpg-server/</guid>
      <description>&lt;p&gt;2019년 9월 21일에 &lt;a href=&#34;https://cafe.naver.com/devrookie/9621&#34;&gt;데브루키 521회&lt;/a&gt;에서 발표한 자료입니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>db: SingleDelete 구현(Pebble issue #222)</title>
      <link>https://marsettler.com/posts/2019-08-19-pebble-issue-222/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-08-19-pebble-issue-222/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cockroachdb/pebble&#34;&gt;Pebble&lt;/a&gt;은 LevelDB/RocksDB에서 영감을 받은 카크로치디비용 키-밸류 저장소입니다. 현재(2019년 8월)는 개발 진행중인 상태이며, 2020년 카크로치디비 적용을 &lt;a href=&#34;https://github.com/petermattis/pebble/issues/233&#34;&gt;계획&lt;/a&gt;하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>파이콘 한국 2019 스프린트 - 카크로치디비(CockroachDB)와 함께</title>
      <link>https://marsettler.com/posts/2019-08-18-sprint-on-pyconkr-2019-with-cockroachdb/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-08-18-sprint-on-pyconkr-2019-with-cockroachdb/</guid>
      <description>&lt;p&gt;파이콘 한국 2019 스프린트에 참가했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>카크로치디비(CockroachDB) 윈도우(WSL2)에서 빌드</title>
      <link>https://marsettler.com/posts/2019-07-02-windows-wsl2-cockroachdb/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-07-02-windows-wsl2-cockroachdb/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://marsettler.com/post/2019-07-02-windows-wsl2-cockroachdb/cockroachdb-on-windows.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://marsettler.com/2019/06/30/first-sprintseoul.html&#34;&gt;스프린트서울&lt;/a&gt; 참가하면 가장 불편했던 일은 개발환경 설정이었다. 평소에는 집에 있는 리눅스(데스크탑) 환경에서 개발하였는데, 윈도우즈(노트북)을 사용하게 되었기 때문이다. 급한대로 VirtualBox를 사용했는데 성능 차이도 있었고, 직접 손봐야 할 부분이 많았다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>스프린트서울 첫 참가</title>
      <link>https://marsettler.com/posts/2019-06-30-first-sprintseoul/</link>
      <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-06-30-first-sprintseoul/</guid>
      <description>&lt;p&gt;작년 11월부터 카크로치디비에 &lt;a href=&#34;https://github.com/cockroachdb/cockroach/pulls?q=is%3Apr+author%3Ahueypark&#34;&gt;기여&lt;/a&gt;하고 있습니다. 한국에는 관련 커뮤니티나 정보가 부족해 답답해 하고 있었는데, &lt;a href=&#34;https://www.sprintseoul.org/&#34;&gt;스프린트서울&lt;/a&gt;이라는 행사를 알게되어 참가했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 왜 우리는 카크로치디비 라이센스를 변경했는가</title>
      <link>https://marsettler.com/posts/2019-06-10-oss-relicensing-cockroachdb/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-06-10-oss-relicensing-cockroachdb/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/oss-relicensing-cockroachdb/&#34;&gt;Why We’re Relicensing CockroachDB&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 지역 파티셔닝을 사용해 성능을 향상시키는 방법</title>
      <link>https://marsettler.com/posts/2019-06-08-geo-partitioning/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-06-08-geo-partitioning/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/geo-partitioning/&#34;&gt;How to Improve Performance using Geo-Partitioning&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CockroachDB 19.1 소개</title>
      <link>https://marsettler.com/posts/2019-05-06-cockroachdb-19dot1-release/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-05-06-cockroachdb-19dot1-release/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/cockroachdb-19dot1-release/&#34;&gt;https://www.cockroachlabs.com/blog/cockroachdb-19dot1-release/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 고가용성의 역사</title>
      <link>https://marsettler.com/posts/2019-01-04-brief-history-high-availability/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-01-04-brief-history-high-availability/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/brief-history-high-availability/&#34;&gt;https://www.cockroachlabs.com/blog/brief-history-high-availability/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>분산 SQL 데이터베이스 CockroachDB</title>
      <link>https://marsettler.com/posts/2018-12-26-distributed-sql-database-cockroachdb/</link>
      <pubDate>Wed, 26 Dec 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-12-26-distributed-sql-database-cockroachdb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Go 테스트 코드 의존성 압도적으로 관리하기</title>
      <link>https://marsettler.com/posts/2018-12-15-outsmarting-go-dependencies-testing-code/</link>
      <pubDate>Sat, 15 Dec 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-12-15-outsmarting-go-dependencies-testing-code/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/outsmarting-go-dependencies-testing-code/&#34;&gt;https://www.cockroachlabs.com/blog/outsmarting-go-dependencies-testing-code/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 3</title>
      <link>https://marsettler.com/posts/2018-12-08-scheduling-in-go-part3/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-12-08-scheduling-in-go-part3/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html&#34;&gt;https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 동시성에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Serializable이 진정한 트랜잭션입니다</title>
      <link>https://marsettler.com/posts/2018-12-03-acid-rain/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-12-03-acid-rain/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/acid-rain/&#34;&gt;https://www.cockroachlabs.com/blog/acid-rain/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 비용기반 SQL 옵티마이저는 어떻게 만들어졌나</title>
      <link>https://marsettler.com/posts/2018-11-18-building-cost-based-sql-optimizer/</link>
      <pubDate>Sun, 18 Nov 2018 08:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-11-18-building-cost-based-sql-optimizer/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/building-cost-based-sql-optimizer/&#34;&gt;https://www.cockroachlabs.com/blog/building-cost-based-sql-optimizer/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CAP 이론의 한계</title>
      <link>https://marsettler.com/posts/2018-11-07-limits-of-the-cap-theorem/</link>
      <pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-11-07-limits-of-the-cap-theorem/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/limits-of-the-cap-theorem&#34;&gt;https://www.cockroachlabs.com/blog/limits-of-the-cap-theorem&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CockroachDB 1.0 제품준비 완료</title>
      <link>https://marsettler.com/posts/2018-11-04-cockroachdb-1-0-release/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-11-04-cockroachdb-1-0-release/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/cockroachdb-1-0-release&#34;&gt;https://www.cockroachlabs.com/blog/cockroachdb-1-0-release&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2017년 5월에 작성된 CockroachDB 1.0 제품준비 완료 소식입니다. 이어서 최신 버전인  2.0, 2.1 소식도 전해드리겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 관리형 CockroachDB 출시: The Geo-Distributed Database as a Service</title>
      <link>https://marsettler.com/posts/2018-10-31-launching-managed-cockroachdb/</link>
      <pubDate>Wed, 31 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-31-launching-managed-cockroachdb/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/launching-managed-cockroachdb&#34;&gt;https://www.cockroachlabs.com/blog/launching-managed-cockroachdb&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / cgo의 비용과 복잡성</title>
      <link>https://marsettler.com/posts/2018-10-26-the-cost-and-complexity-of-cgo/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-26-the-cost-and-complexity-of-cgo/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/the-cost-and-complexity-of-cgo/&#34;&gt;https://www.cockroachlabs.com/blog/the-cost-and-complexity-of-cgo/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CockroachDB의 온라인 스키마 변경 원리</title>
      <link>https://marsettler.com/posts/2018-10-28-how-online-schema-changes-are-possible-in-cockroachdb/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-28-how-online-schema-changes-are-possible-in-cockroachdb/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/how-online-schema-changes-are-possible-in-cockroachdb/&#34;&gt;https://www.cockroachlabs.com/blog/how-online-schema-changes-are-possible-in-cockroachdb/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Go에서 가비지 컬렉션을 최적화하는 방법</title>
      <link>https://marsettler.com/posts/2018-10-23-how-to-optimize-garbage-collection-in-go/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-23-how-to-optimize-garbage-collection-in-go/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/&#34;&gt;https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 왜 Go가 CockroachDB에 올바른 선택인가</title>
      <link>https://marsettler.com/posts/2018-10-21-why-go-was-the-right-choice-for-cockroachdb/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-21-why-go-was-the-right-choice-for-cockroachdb/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/why-go-was-the-right-choice-for-cockroachdb/&#34;&gt;https://www.cockroachlabs.com/blog/why-go-was-the-right-choice-for-cockroachdb/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CockroachDB에서의 SQL: 테이블 데이터를 키밸류 저장소에 매핑시키기</title>
      <link>https://marsettler.com/posts/2018-10-19-sql-in-cockroachdb-mapping-table-data-to-key-value-storage/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-19-sql-in-cockroachdb-mapping-table-data-to-key-value-storage/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/sql-in-cockroachdb-mapping-table-data-to-key-value-storage/&#34;&gt;&lt;a href=&#34;https://www.cockroachlabs.com/blog/sql-in-cockroachdb-mapping-table-data-to-key-value-storage/&#34;&gt;https://www.cockroachlabs.com/blog/sql-in-cockroachdb-mapping-table-data-to-key-value-storage/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / CockroachDB의 분산처리, 아토믹 트랜잭션은 어떻게 동작하는가</title>
      <link>https://marsettler.com/posts/2018-10-17-how-cockroachdb-distributes-atomic-transactions/</link>
      <pubDate>Wed, 17 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-17-how-cockroachdb-distributes-atomic-transactions/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/how-cockroachdb-distributes-atomic-transactions/&#34;&gt;https://www.cockroachlabs.com/blog/how-cockroachdb-distributes-atomic-transactions/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Raft를 스케일링하기</title>
      <link>https://marsettler.com/posts/2018-10-16-cockroachdb-blog-scaling-raft/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-16-cockroachdb-blog-scaling-raft/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/scaling-raft/&#34;&gt;&lt;a href=&#34;https://www.cockroachlabs.com/blog/scaling-raft/&#34;&gt;https://www.cockroachlabs.com/blog/scaling-raft/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Hello World</title>
      <link>https://marsettler.com/posts/2018-10-15-cockroachdb-blog-hello-world/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-15-cockroachdb-blog-hello-world/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/hello-world/&#34;&gt;https://www.cockroachlabs.com/blog/hello-world/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 작업훔치기 스케줄러</title>
      <link>https://marsettler.com/posts/2018-10-13-go-work-stealing-scheduler/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-13-go-work-stealing-scheduler/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://rakyll.org/scheduler/&#34;&gt;https://rakyll.org/scheduler/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 2</title>
      <link>https://marsettler.com/posts/2018-10-03-scheduling-in-go-part2/</link>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-03-scheduling-in-go-part2/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html&#34;&gt;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 Go 스케줄러에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 1</title>
      <link>https://marsettler.com/posts/2018-10-02-scheduling-in-go-part1/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-02-scheduling-in-go-part1/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part1.html&#34;&gt;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part1.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 OS 스케줄러에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>std::shared_ptr 는 쓰레드 세이프하지 않음</title>
      <link>https://marsettler.com/std-shared-ptr-is-not-thread-safe/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/std-shared-ptr-is-not-thread-safe/</guid>
      <description>&lt;p&gt;std::shared_ptr 는 쓰레드 세이프하지 않습니다. 관련 예제와 볼만한 링크를 남깁니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 의사결정을 위한 게임 프로듀서의 도움말</title>
      <link>https://marsettler.com/posts/2018-07-08-a-producers-guide-to-decisionmaking/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-07-08-a-producers-guide-to-decisionmaking/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://gamasutra.com/view/news/320800/A_producers_guide_to_decisionmaking.php&#34;&gt;https://gamasutra.com/view/news/320800/A_producers_guide_to_decisionmaking.php&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mission: Sends intelligence to Mars</title>
      <link>https://marsettler.com/posts/2018-05-27-mission-send-intelligence-to-mars/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-05-27-mission-send-intelligence-to-mars/</guid>
      <description>&lt;h3 id=&#34;why&#34;&gt;Why?&lt;/h3&gt;
&lt;p&gt;It&#39;s reasonable mission for entire my life.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Too much(space conquest)&lt;/li&gt;
&lt;li&gt;Too small(house buying without a mortgage)&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code debug speed up on Windows</title>
      <link>https://marsettler.com/posts/2018-05-14-vscode-go-debug-speed-up-on-windows/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-05-14-vscode-go-debug-speed-up-on-windows/</guid>
      <description>&lt;p&gt;On &lt;code&gt;Visual Studio Code&lt;/code&gt;, &lt;code&gt;Go&lt;/code&gt; debugging is very slow because that always rebuild everything.&lt;/p&gt;
&lt;p&gt;If you set following settings on your &lt;code&gt;.vscode&lt;/code&gt; folder &lt;code&gt;Visual Studio Code&lt;/code&gt; will only build when changed.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>카크로치디비의 컬럼 패밀리</title>
      <link>https://marsettler.com/cockroachdb-column-families/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb-column-families/</guid>
      <description>&lt;p&gt;카크로치디비의 컬럼 패밀리에 대해 소개합니다.
실제 스토리지 레이어에 어떻게 데이터가 기록되는지에 관심이 있거나,
더 효율적인 테이블 설계를 하고 싶은 분에게 도움이 되는 내용입니다.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>