<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Marsettler</title>
    <link>https://marsettler.com/tags/go/</link>
    <description>Recent content in go on Marsettler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 04 Dec 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://marsettler.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; to Go</title>
      <link>https://marsettler.com/go/c&#43;&#43;-to-go/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/c&#43;&#43;-to-go/</guid>
      <description>C++ to Go Introducing Ziegel 박재완
 Luft  Ziegel and TrailDB   Luft  OLAP database for analize the analyzing user behavior in real-time Use TrailDB as a storage Written in C/C++ and Go   TrailDB  TrailDB is an efficient tool for storing and querying series of events Written in C   Ziegel  New storage engine for the Luft Written in Go   Why?</description>
    </item>
    
    <item>
      <title>Go good reads</title>
      <link>https://marsettler.com/go/go-good-reads/</link>
      <pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go-good-reads/</guid>
      <description>Profiling and Execution Tracing in Go  What I learned  pprof can diff with go tool pprof -http=:8080 -diff_base &amp;lt;file2&amp;gt; &amp;lt;file1&amp;gt;    How to Write Accurate Benchmarks in Go  Not resetting or pausing the timer Making wrong assumptions about micro-benchmarks Not being careful about compiler optimizations Being fooled by the observer effect  Obscure Go Optimisations - Bryan Boreham  Take-aways  Slice-to-interface cast will allocate. Heap allocation is costly.</description>
    </item>
    
    <item>
      <title>CockroachDB</title>
      <link>https://marsettler.com/cockroachdb/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/cockroachdb/</guid>
      <description>페블(Pebble): RocksDB에서 영감을 받은 키밸류 저장소
(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: Bugfix and Chill(버그를 수정하자!)
(Guide) Jordan Lewis&#39;s LARGE DATA BANK livestream: CockroachDB is learning the secret technique LISTEN/NOTIFY
피터 매티스와의 인터뷰 - Software Engineering Daily
스프린트서울 참가자분들을 위한 카크로치디비(CockroachDB)
카크로치디비의 컬럼 패밀리</description>
    </item>
    
    <item>
      <title>Go의 철학</title>
      <link>https://marsettler.com/go/the-zen-of-go/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/the-zen-of-go/</guid>
      <description>Dave Cheney의 The Zen of Go를 번역했습니다. 좀 더 알고 싶으신 분은 발표 영상과 블로그 글을 함께 참고해 주십시오.
 Go의 철학 쉽고, 읽기 좋으며, 유지가능한 Go 코드 작성을 위한 10가지 엔지니어링 가치. 고퍼콘 이스라엘 2020에 발표하였음.
패키지는 하나의 목적만을 달성합니다 잘 디자인된 Go 패키지는 단 하나의 아이디어와 관련 동작을 제공합니다. 좋은 Go 패키지를 위해 좋은 이름을 먼저 정해야 합니다. 엘리베이터 피치라고 생각하며 패키지 이름을 정해보십시오.
에러는 명시적으로 처리합니다 단단한 프로그램은 문제가 생기기 전에 실패처리를 하는 요소들로 이루어져 있습니다.</description>
    </item>
    
    <item>
      <title>xvfb를 이용한 Go headless 테스트</title>
      <link>https://marsettler.com/go/go-headless-test-with-xvfb/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go-headless-test-with-xvfb/</guid>
      <description>Go에서 GLFW 등을 이용해 그래픽스 관련 작업을 할 때에도 자동화 테스트 구성이 가능합니다. 하지만 GitHub Actions과 같이 디스플레이가 없는 환경에서는 의존성을 가지고 있다는 이유만으로 그래픽스 관련 테스트가 실패합니다.
xvfb는 메뉴얼에서 virtual framebuffer X server for X Version 라고 소개되고 있으며, 서버 사이드 테스트를 위해 주로 사용됩니다.
Ubuntu 기준으로 sudo apt install xvfb로 설치하고 xvfb-run에 이어서 테스트 명령어를 추가하여 테스트할 수 있습니다. 실제 GitHub Actions에 적용한 예시를 공유드립니다.</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://marsettler.com/go/go/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/go/</guid>
      <description>xvfb를 이용한 Go headless 테스트
Go의 철학
Go module에서 GitHub private repository 사용
좋은 읽을거리</description>
    </item>
    
    <item>
      <title>Go module에서 GitHub private 저장소 사용</title>
      <link>https://marsettler.com/go/using-go-module-with-github-private-repository/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/go/using-go-module-with-github-private-repository/</guid>
      <description>Go module에서 GitHub private 저장소를 사용하는 방법입니다.
 git 설정에서 GitHub 접근을 계정과 토큰을 사용하게 변경 git config --global url.&amp;#34;https://${GITHUB_USER}:${{GITHUB_TOKEN}}@github.com&amp;#34;.insteadOf &amp;#34;https://github.com&amp;#34; GOPRIVATE 환경변수에 private 저장소 등록 GOPRIVATE=&amp;#34;github.com/hueypark/asset&amp;#34; </description>
    </item>
    
    <item>
      <title>sql: COMMENT ON INDEX 지원(CockroachDB issue #41316)</title>
      <link>https://marsettler.com/posts/2019-10-20-cockroach-issue-41316/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-20-cockroach-issue-41316/</guid>
      <description>&lt;p&gt;이슈: &lt;a href=&#34;https://github.com/cockroachdb/cockroach/issues/41316&#34;&gt;sql: add support for COMMENT ON INDEX #41316&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sql: COMMENT ON INDEX 지원 작업을 했습니다. 이번에는 이슈 등록자가 저에게 먼저 연락을 하는 새로운 경험을 했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>삭제될 WAL, MANIFEST, sstable을 보관하는 기능 제공 (Pebble issue #284)</title>
      <link>https://marsettler.com/posts/2019-10-15-pebble-issue-284/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-15-pebble-issue-284/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;이슈: &lt;a href=&#34;https://github.com/cockroachdb/pebble/issues/284&#34;&gt;&lt;a href=&#34;https://github.com/cockroachdb/pebble/issues/284&#34;&gt;https://github.com/cockroachdb/pebble/issues/284&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이번에는 Pebble에서 아무에게도 할당되지 않은 이슈를 선택해 수정했습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>초보다 정밀한 단위에 대한 `EXTRACT` 명령이 postgres와 다르게 동작함(CockroachDB issue #40683)</title>
      <link>https://marsettler.com/posts/2019-10-13-cockroach-issue-40683/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-10-13-cockroach-issue-40683/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;이번에는 간단하게 해결할 수 있는 이슈를 수정했습니다. 이 정도의 이슈는 처음 스프린트에 참여하는 분도 해결할 수 있을 것으로 기대합니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>db: SingleDelete 구현(Pebble issue #222)</title>
      <link>https://marsettler.com/posts/2019-08-19-pebble-issue-222/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2019-08-19-pebble-issue-222/</guid>
      <description>&lt;h2 id=&#34;heading&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cockroachdb/pebble&#34;&gt;Pebble&lt;/a&gt;은 LevelDB/RocksDB에서 영감을 받은 카크로치디비용 키-밸류 저장소입니다. 현재(2019년 8월)는 개발 진행중인 상태이며, 2020년 카크로치디비 적용을 &lt;a href=&#34;https://github.com/petermattis/pebble/issues/233&#34;&gt;계획&lt;/a&gt;하고 있습니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 3</title>
      <link>https://marsettler.com/posts/2018-12-08-scheduling-in-go-part3/</link>
      <pubDate>Sat, 08 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-12-08-scheduling-in-go-part3/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html&#34;&gt;https://www.ardanlabs.com/blog/2018/12/scheduling-in-go-part3.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 동시성에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / cgo의 비용과 복잡성</title>
      <link>https://marsettler.com/posts/2018-10-26-the-cost-and-complexity-of-cgo/</link>
      <pubDate>Fri, 26 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-26-the-cost-and-complexity-of-cgo/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/the-cost-and-complexity-of-cgo/&#34;&gt;https://www.cockroachlabs.com/blog/the-cost-and-complexity-of-cgo/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / Go에서 가비지 컬렉션을 최적화하는 방법</title>
      <link>https://marsettler.com/posts/2018-10-23-how-to-optimize-garbage-collection-in-go/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-23-how-to-optimize-garbage-collection-in-go/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/&#34;&gt;https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) 카크로치디비(CockroachDB) 블로그 / 왜 Go가 CockroachDB에 올바른 선택인가</title>
      <link>https://marsettler.com/posts/2018-10-21-why-go-was-the-right-choice-for-cockroachdb/</link>
      <pubDate>Sun, 21 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-21-why-go-was-the-right-choice-for-cockroachdb/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.cockroachlabs.com/blog/why-go-was-the-right-choice-for-cockroachdb/&#34;&gt;https://www.cockroachlabs.com/blog/why-go-was-the-right-choice-for-cockroachdb/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 작업훔치기 스케줄러</title>
      <link>https://marsettler.com/posts/2018-10-13-go-work-stealing-scheduler/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-13-go-work-stealing-scheduler/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://rakyll.org/scheduler/&#34;&gt;https://rakyll.org/scheduler/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 2</title>
      <link>https://marsettler.com/posts/2018-10-03-scheduling-in-go-part2/</link>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-03-scheduling-in-go-part2/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html&#34;&gt;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part2.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 Go 스케줄러에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(번역) Go 스케줄링 파트 1</title>
      <link>https://marsettler.com/posts/2018-10-02-scheduling-in-go-part1/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://marsettler.com/posts/2018-10-02-scheduling-in-go-part1/</guid>
      <description>&lt;p&gt;원문: &lt;a href=&#34;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part1.html&#34;&gt;https://www.ardanlabs.com/blog/2018/08/scheduling-in-go-part1.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;프렐류드&lt;/h3&gt;
&lt;p&gt;Go 스케줄러의 구조와 의미 이해를 제공하는 3부작의 세 번째 글입니다. 이 글은 OS 스케줄러에 중점을 둡니다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Visual Studio Code debug speed up on Windows</title>
      <link>https://marsettler.com/posts/2018-05-14-vscode-go-debug-speed-up-on-windows/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0900</pubDate>
      
      <guid>https://marsettler.com/posts/2018-05-14-vscode-go-debug-speed-up-on-windows/</guid>
      <description>&lt;p&gt;On &lt;code&gt;Visual Studio Code&lt;/code&gt;, &lt;code&gt;Go&lt;/code&gt; debugging is very slow because that always rebuild everything.&lt;/p&gt;
&lt;p&gt;If you set following settings on your &lt;code&gt;.vscode&lt;/code&gt; folder &lt;code&gt;Visual Studio Code&lt;/code&gt; will only build when changed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>